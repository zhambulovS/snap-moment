
import React from 'react';
import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Camera, Heart, Users, Upload, Download } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import GuestPhotoUpload from '@/components/GuestPhotoUpload';
import AlbumGallery from '@/components/AlbumGallery';

const Index = () => {
  const [currentView, setCurrentView] = useState<'home' | 'create' | 'album' | 'guest'>('home');
  const [albumData, setAlbumData] = useState<any>(null);
  const [guestAlbumId, setGuestAlbumId] = useState<string>('');
  const { toast } = useToast();

  const handleCreateAlbum = (formData: any) => {
    const albumId = Math.random().toString(36).substring(2, 15);
    const newAlbum = {
      id: albumId,
      ...formData,
      photos: [],
      uploadCounts: new Map(),
      createdAt: new Date().toISOString()
    };
    
    // Store in localStorage for demo purposes
    localStorage.setItem(`album_${albumId}`, JSON.stringify(newAlbum));
    setAlbumData(newAlbum);
    setCurrentView('album');
    
    toast({
      title: "–ê–ª—å–±–æ–º —Å–æ–∑–¥–∞–Ω! üéâ",
      description: `–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –≥–æ—Å—Ç—è–º–∏: weddingsnap.com/guest/${albumId}`,
    });
  };

  const handleGuestAccess = (albumId: string) => {
    const storedAlbum = localStorage.getItem(`album_${albumId}`);
    if (storedAlbum) {
      setAlbumData(JSON.parse(storedAlbum));
      setGuestAlbumId(albumId);
      setCurrentView('guest');
    } else {
      toast({
        title: "–ê–ª—å–±–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω",
        description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏",
        variant: "destructive"
      });
    }
  };

  if (currentView === 'create') {
    return <CreateAlbumForm onSubmit={handleCreateAlbum} onBack={() => setCurrentView('home')} />;
  }

  if (currentView === 'album' && albumData) {
    return <AlbumGallery album={albumData} onBack={() => setCurrentView('home')} />;
  }

  if (currentView === 'guest' && albumData) {
    return <GuestPhotoUpload album={albumData} albumId={guestAlbumId} onBack={() => setCurrentView('home')} />;
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-rose-50 via-pink-50 to-orange-50">
      {/* Header */}
      <header className="relative overflow-hidden bg-white/70 backdrop-blur-sm border-b border-rose-200">
        <div className="absolute inset-0 bg-gradient-to-r from-rose-100/50 to-pink-100/50"></div>
        <div className="relative container mx-auto px-4 py-8">
          <div className="flex items-center justify-center space-x-3 mb-4">
            <Camera className="h-8 w-8 text-rose-500" />
            <h1 className="text-4xl font-bold bg-gradient-to-r from-rose-600 to-pink-600 bg-clip-text text-transparent">
              WeddingSnap
            </h1>
            <Heart className="h-6 w-6 text-pink-500 animate-pulse" />
          </div>
          <p className="text-center text-lg text-gray-600 max-w-2xl mx-auto">
            –°–æ–±–µ—Ä–∏—Ç–µ –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–æ —Å–≤–æ–µ–π —Å–≤–∞–¥—å–±—ã –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ. –í–∞—à–∏ –≥–æ—Å—Ç–∏ –ª–µ–≥–∫–æ –∑–∞–≥—Ä—É–∑—è—Ç —Ñ–æ—Ç–æ –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.
          </p>
        </div>
      </header>

      {/* Main Content */}
      <main className="container mx-auto px-4 py-12">
        {/* Hero Section */}
        <div className="text-center mb-16">
          <div className="inline-flex items-center space-x-8 mb-8">
            <Button
              onClick={() => setCurrentView('create')}
              size="lg"
              className="bg-gradient-to-r from-rose-500 to-pink-500 hover:from-rose-600 hover:to-pink-600 text-white px-8 py-6 text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
            >
              <Heart className="mr-2 h-5 w-5" />
              –°–æ–∑–¥–∞—Ç—å –∞–ª—å–±–æ–º
            </Button>
            
            <div className="text-gray-500">–∏–ª–∏</div>
            
            <GuestAccessForm onAccess={handleGuestAccess} />
          </div>
        </div>

        {/* Features */}
        <div className="grid md:grid-cols-3 gap-8 mb-16">
          <Card className="border-rose-200 hover:shadow-lg transition-all duration-300 transform hover:scale-105 bg-white/70 backdrop-blur-sm">
            <CardHeader className="text-center">
              <div className="mx-auto w-16 h-16 bg-gradient-to-br from-rose-100 to-pink-100 rounded-full flex items-center justify-center mb-4">
                <Users className="h-8 w-8 text-rose-500" />
              </div>
              <CardTitle className="text-rose-700">–î–ª—è –≥–æ—Å—Ç–µ–π</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600 text-center">
                –ì–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç —Ñ–æ—Ç–æ –ø—Ä—è–º–æ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞ –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
              </p>
            </CardContent>
          </Card>

          <Card className="border-rose-200 hover:shadow-lg transition-all duration-300 transform hover:scale-105 bg-white/70 backdrop-blur-sm">
            <CardHeader className="text-center">
              <div className="mx-auto w-16 h-16 bg-gradient-to-br from-rose-100 to-pink-100 rounded-full flex items-center justify-center mb-4">
                <Upload className="h-8 w-8 text-rose-500" />
              </div>
              <CardTitle className="text-rose-700">–ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥—Ä—É–∑–∫–∞</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600 text-center">
                –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ–æ—Ç–æ —Å –ª—é–±–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
              </p>
            </CardContent>
          </Card>

          <Card className="border-rose-200 hover:shadow-lg transition-all duration-300 transform hover:scale-105 bg-white/70 backdrop-blur-sm">
            <CardHeader className="text-center">
              <div className="mx-auto w-16 h-16 bg-gradient-to-br from-rose-100 to-pink-100 rounded-full flex items-center justify-center mb-4">
                <Download className="h-8 w-8 text-rose-500" />
              </div>
              <CardTitle className="text-rose-700">–í—Å–µ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600 text-center">
                –í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –≤ –≤–∞—à–µ–º –∞–ª—å–±–æ–º–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
              </p>
            </CardContent>
          </Card>
        </div>

        {/* How it works */}
        <div className="text-center">
          <h2 className="text-3xl font-bold text-gray-800 mb-8">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h2>
          <div className="grid md:grid-cols-3 gap-8">
            <div className="space-y-4">
              <div className="w-12 h-12 bg-gradient-to-br from-rose-500 to-pink-500 text-white rounded-full flex items-center justify-center text-xl font-bold mx-auto">
                1
              </div>
              <h3 className="text-xl font-semibold text-gray-700">–°–æ–∑–¥–∞–π—Ç–µ –∞–ª—å–±–æ–º</h3>
              <p className="text-gray-600">–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–∞–¥—å–±—ã –∏ –ø–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É</p>
            </div>
            
            <div className="space-y-4">
              <div className="w-12 h-12 bg-gradient-to-br from-rose-500 to-pink-500 text-white rounded-full flex items-center justify-center text-xl font-bold mx-auto">
                2
              </div>
              <h3 className="text-xl font-semibold text-gray-700">–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π</h3>
              <p className="text-gray-600">–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≥–æ—Å—Ç—è–º –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç–µ QR-–∫–æ–¥ –Ω–∞ —Å—Ç–æ–ª–∞—Ö</p>
            </div>
            
            <div className="space-y-4">
              <div className="w-12 h-12 bg-gradient-to-br from-rose-500 to-pink-500 text-white rounded-full flex items-center justify-center text-xl font-bold mx-auto">
                3
              </div>
              <h3 className="text-xl font-semibold text-gray-700">–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º</h3>
              <p className="text-gray-600">–í—Å–µ —Ñ–æ—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—è–≤—è—Ç—Å—è –≤ –≤–∞—à–µ–º –∞–ª—å–±–æ–º–µ</p>
            </div>
          </div>
        </div>
      </main>

      {/* Footer */}
      <footer className="bg-white/70 backdrop-blur-sm border-t border-rose-200 py-8">
        <div className="container mx-auto px-4 text-center">
          <p className="text-gray-600">
            ¬© 2024 WeddingSnap. –°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è –æ—Å–æ–±–µ–Ω–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
          </p>
        </div>
      </footer>
    </div>
  );
};

const CreateAlbumForm = ({ onSubmit, onBack }: { onSubmit: (data: any) => void; onBack: () => void }) => {
  const [formData, setFormData] = useState({
    brideName: '',
    groomName: '',
    description: '',
    photoLimit: 5,
    weddingDate: ''
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit(formData);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-rose-50 via-pink-50 to-orange-50 py-12">
      <div className="container mx-auto px-4 max-w-2xl">
        <Button 
          variant="ghost" 
          onClick={onBack}
          className="mb-6 text-rose-600 hover:text-rose-700"
        >
          ‚Üê –ù–∞–∑–∞–¥
        </Button>
        
        <Card className="bg-white/70 backdrop-blur-sm border-rose-200">
          <CardHeader>
            <CardTitle className="text-2xl text-center text-rose-700">
              <Heart className="inline mr-2 h-6 w-6" />
              –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–∞–¥–µ–±–Ω–æ–≥–æ –∞–ª—å–±–æ–º–∞
            </CardTitle>
            <CardDescription className="text-center">
              –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–π —Å–≤–∞–¥—å–±–µ
            </CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="brideName">–ò–º—è –Ω–µ–≤–µ—Å—Ç—ã</Label>
                  <Input
                    id="brideName"
                    value={formData.brideName}
                    onChange={(e) => setFormData({...formData, brideName: e.target.value})}
                    placeholder="–ê–π–Ω—É—Ä–∞"
                    required
                  />
                </div>
                <div>
                  <Label htmlFor="groomName">–ò–º—è –∂–µ–Ω–∏—Ö–∞</Label>
                  <Input
                    id="groomName"
                    value={formData.groomName}
                    onChange={(e) => setFormData({...formData, groomName: e.target.value})}
                    placeholder="–ê–ª–∏"
                    required
                  />
                </div>
              </div>

              <div>
                <Label htmlFor="weddingDate">–î–∞—Ç–∞ —Å–≤–∞–¥—å–±—ã</Label>
                <Input
                  id="weddingDate"
                  type="date"
                  value={formData.weddingDate}
                  onChange={(e) => setFormData({...formData, weddingDate: e.target.value})}
                  required
                />
              </div>

              <div>
                <Label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</Label>
                <Textarea
                  id="description"
                  value={formData.description}
                  onChange={(e) => setFormData({...formData, description: e.target.value})}
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ –≤–∞—à–µ–π –æ—Å–æ–±–µ–Ω–Ω–æ–π –¥–∞—Ç–µ..."
                  rows={3}
                />
              </div>

              <div>
                <Label htmlFor="photoLimit">–õ–∏–º–∏—Ç —Ñ–æ—Ç–æ –Ω–∞ –≥–æ—Å—Ç—è</Label>
                <Input
                  id="photoLimit"
                  type="number"
                  min="1"
                  max="20"
                  value={formData.photoLimit}
                  onChange={(e) => setFormData({...formData, photoLimit: parseInt(e.target.value)})}
                />
              </div>

              <Button 
                type="submit" 
                className="w-full bg-gradient-to-r from-rose-500 to-pink-500 hover:from-rose-600 hover:to-pink-600"
                size="lg"
              >
                <Camera className="mr-2 h-5 w-5" />
                –°–æ–∑–¥–∞—Ç—å –∞–ª—å–±–æ–º
              </Button>
            </form>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

const GuestAccessForm = ({ onAccess }: { onAccess: (albumId: string) => void }) => {
  const [albumId, setAlbumId] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (albumId.trim()) {
      onAccess(albumId.trim());
    }
  };

  return (
    <form onSubmit={handleSubmit} className="flex items-center space-x-2">
      <Input
        placeholder="–í–≤–µ–¥–∏—Ç–µ ID –∞–ª—å–±–æ–º–∞"
        value={albumId}
        onChange={(e) => setAlbumId(e.target.value)}
        className="border-rose-200 focus:border-rose-400"
      />
      <Button 
        type="submit"
        variant="outline"
        className="border-rose-200 text-rose-600 hover:bg-rose-50"
      >
        –í–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å
      </Button>
    </form>
  );
};

export default Index;
